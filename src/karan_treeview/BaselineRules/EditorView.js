import { Editor } from "@monaco-editor/react";
import React, { useContext } from "react";
import { AppContext } from "../../App";
import { removeField, removeUncheckedObjs } from "../utils";

const EditorView = ({ editorBaseLine }) => {
  const { dataQualityStates } = useContext(AppContext);
  const autoGeneratedRules = dataQualityStates.autoGeneratedRules;
  removeField(editorBaseLine, "optional");
  removeUncheckedObjs(editorBaseLine);

  const handleEditorChange = (value) => {
    try {
      const parsedValue = JSON.parse(value);
      Object.keys(autoGeneratedRules).forEach((key) => {
        if (parsedValue[key]) {
          if (parsedValue[key].length >= 0) {
            autoGeneratedRules[key] = parsedValue[key];
            return;
          }
          autoGeneratedRules[key] = { ...autoGeneratedRules[key], ...parsedValue[key] };
        }
      });
    } catch (e) {
      console.error("Invalid JSON input", e);
    }
  };

  const editorBaseLineString = JSON.stringify(editorBaseLine, null, 4);
  return (
    <Editor
      height="90vh"
      defaultValue={editorBaseLineString || "// some comment"}
      defaultLanguage="json"
      value={editorBaseLineString}
      onChange={handleEditorChange}
    />
  );
};

export default EditorView;
