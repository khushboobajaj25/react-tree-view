import React, { useContext, useState } from "react";

import { useNavigate } from "react-router-dom";
import { AppContext } from "../App";
import "../rules-view.css";
import EditorView from "./BaselineRules/EditorView";
import RulesTreeView from "./ColumnLevelRules/RulesTreeView";
import AddMoreRules from "./AddMoreRules/AddMoreRules";

export default function RulesView() {
  const { dataQualityStates, setDataQualityStates } = useContext(AppContext);
  const { autoGeneratedRules } = dataQualityStates;
  const [editorData, setEditorData] = useState(JSON.parse(JSON.stringify(autoGeneratedRules)));
  const [draggedItem, setDraggedItem] = useState(null);
  const navigate = useNavigate();

  const updateEditorData = () => {
    try {
      Object.keys(editorData).forEach((key) => {
        if (autoGeneratedRules[key]) {
          if (autoGeneratedRules[key].length >= 0) {
            editorData[key] = autoGeneratedRules[key];
            return;
          }
          editorData[key] = { ...editorData[key], ...autoGeneratedRules[key] };
        }
      });
    } catch (e) {
      console.error("Invalid JSON input", e);
    }
    setEditorData({ ...JSON.parse(JSON.stringify(autoGeneratedRules)) });
  };

  const handleSave = () => {
    setDataQualityStates({ ...dataQualityStates });
    updateEditorData();
  };

  const handleSubmit = () => {
    console.log("Submit button clicked");
    navigate("/after-submit");
  };

  return (
    <div className="grid-container" key={autoGeneratedRules.toString()}>
      <div className="grid-item">
        <AddMoreRules setDraggedItem={setDraggedItem} />
      </div>
      <div className="grid-item">
        <RulesTreeView draggedItem={draggedItem} setDraggedItem={setDraggedItem} setEditorData={setEditorData} />
      </div>
      <div className="grid-item">
        <EditorView editorBaseLine={editorData} />
      </div>
      <button onClick={handleSave}>Save</button>
      <button onClick={handleSubmit}>Execute</button>
    </div>
  );
}
