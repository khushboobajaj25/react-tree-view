import React, { useContext, useState } from "react";
import { FaExclamationCircle } from "react-icons/fa"; // Import an icon
import { AppContext } from "../../App";
import { Button, Checkbox, Input } from "@salt-ds/core";

const FilterView = ({ listOfColumns }) => {
  const { dataQualityStates, setDataQualityStates } = useContext(AppContext);
  const [isPopupOpen, setIsPopupOpen] = useState(false);
  const [selectedFilters, setSelectedFilters] = useState(["Select All", ...listOfColumns]);
  const [searchQuery, setSearchQuery] = useState("");
  const autoGeneratedRules = dataQualityStates.autoGeneratedRules;
  const togglePopup = () => setIsPopupOpen(!isPopupOpen);

  const handleCheckboxChange = (option) => {
    if (option === "Select All") {
      if (selectedFilters.length === listOfColumns.length + 1) {
        setSelectedFilters([]);
      } else {
        setSelectedFilters(["Select All", ...listOfColumns]);
      }
      return;
    }
    if (selectedFilters.includes(option)) {
      setSelectedFilters(selectedFilters.filter((item) => item !== option));
    } else {
      setSelectedFilters([...selectedFilters, option]);
    }
  };

  const handleSave = () => {
    listOfColumns.forEach((column) => {
      if (selectedFilters.includes(column)) {
        autoGeneratedRules[column]['isHidden'] = true;
      } else {
        autoGeneratedRules[column]['isHidden'] = false;
      }
    });
    setDataQualityStates({ ...dataQualityStates, autoGeneratedRules });
    togglePopup();
  };

  const isSelected = (option) => selectedFilters.includes(option);

  const filteredColumns = listOfColumns.filter((column) =>
    column.toLowerCase().includes(searchQuery.toLowerCase())
  );

  const handleKeyDown = (event) => {
    // Allow default keyboard navigation for the input field
    if (event.target.tagName === 'INPUT') {
      return;
    }
    // Prevent default keyboard navigation for other elements
    event.preventDefault();
    event.stopPropagation();
  };

  return (
    <>
    <div style={{ position: "relative", display: "inline-block" }}>
      <Button onClick={togglePopup} style={{ padding: "5px 10px" }}>Filter</Button>
      {isPopupOpen && (
        <div
          style={{
            position: "absolute",
            top: "100%",
            left: "0",
            width: "200px",
            background: "#fff",
            border: "1px solid #ccc",
            boxShadow: "0 2px 10px rgba(0,0,0,0.2)",
            padding: "10px",
            zIndex: 1000,
          }}
          onKeyDown={handleKeyDown}
        >
          <div style={{ marginBottom: "10px", borderBottom: "1px solid #ccc", paddingBottom: "5px" }}>
            <Input
              placeholder="Search..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              style={{
                width: "100%",
                padding: "5px",
                boxSizing: "border-box",
                marginBottom: "10px",
              }}
            />
          </div>
          <div style={{ maxHeight: "150px", overflowY: "auto" }}>
            {["Select All", ...filteredColumns].map((option) => (
              <label key={option} style={{ display: "flex", alignItems: "center", marginBottom: "5px" }}>
                <Checkbox checked={isSelected(option)} onChange={() => handleCheckboxChange(option)} />
                <span style={{ marginLeft: "5px" }}>{option}</span>
                {option === "Select All" && selectedFilters.length > 1 && selectedFilters.length < listOfColumns.length + 1 && (
                  <FaExclamationCircle style={{ marginLeft: "5px", color: "orange" }} />
                )}
              </label>
            ))}
          </div>
          <div style={{ display: "flex", justifyContent: "space-between", marginTop: "10px" }}>
            <Button onClick={handleSave} style={{ padding: "5px 10px" }}>
              Save
            </Button>
            <Button onClick={togglePopup} style={{ padding: "5px 10px" }}>
              Cancel
            </Button>
          </div>
        </div>
      )}
    </div>
    </>

  );
};

export default FilterView;
